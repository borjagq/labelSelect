!function(u){u.fn.labelSelect=function(e,t){function l(e){return["replacedLabelOnSelect","extraClass","for","highlightSel","theme","unfoldDir","values","width"].includes(e)}var a=this,i=a.data("labelSelectOptions");if(null==i&&(i={replacedLabelOnSelect:!0,extraClass:"",for:!1,highlightSel:!0,theme:"white",unfoldDir:"down",values:[],width:a.width()+"px"},a.on("click",function(e){e.stopPropagation(),a.labelSelect("refresh")}),u(document).on("click",function(e){u("label .labelSelect.unfolded").trigger("click")})),"object"==typeof e){for(var r=Object.keys(e),n=0;n<r.length;++n){var s=r[n],d=e[s];l(s)&&(i[s]=d)}a.data("labelSelectOptions",i),a.labelSelect("refresh")}else if("string"==typeof e&&"refresh"===e){a.css({position:"relative",height:"1.6em",display:"inline-block",width:i.width,"min-width":i.width}),null==a.data("selected")&&a.data("selected","none"),a.empty();var c=u("<div class='labelSelect'><span></span></div>");i.highlightSel&&c.addClass("highlight-selection"),c.addClass("theme_"+i.theme),c.addClass("unfold_"+i.unfoldDir),c.addClass(i.extraClass);var o=u("<ul></ul>");o.append("<li data-id='none'></li>");for(n=0;n<i.values.length;++n){var h=i.values[n].id,p=i.values[n].label;if("none"==h)throw new Error("ValueError: id 'none' is reserved");o.append("<li data-id='"+p+"'>"+h+"</li>")}var f=a.data("selected");o.children("li[data-id="+f+"]").addClass("selected"),o.children("li").on("click",function(e){return u(this).parent().children("li").removeClass("selected"),u(this).addClass("selected"),u(this).parent().parent().children("span").html(u(this).html()),u(u(this).parents("label")[0]).data("selected")!=u(this).attr("data-id")&&(u(u(this).parents("label")[0]).data("selected",u(this).attr("data-id")),u(a).trigger("change")),"none"==u(this).attr("data-id")?(u(a).trigger("selectNone"),void u(this).parent().parent().children("span").addClass("selected-none")):(u(this).parent().parent().children("span").removeClass("selected-none"),u(a).trigger("selectOption"),void(i.replacedLabelOnSelect&&(e.stopPropagation(),a.labelSelect("replaceLabel"))))}),c.on("click",function(e){u("label .labelSelect.unfolded").not(this).trigger("click");var t=1.6*(u(this).children("ul").children("li").length+1);u(this).toggleClass("unfolded"),u(this).hasClass("unfolded")?(u(this).children("ul").css("max-height",t+"em"),u(this).trigger("unfolded")):(u(this).children("ul").css("max-height",0),u(this).trigger("folded")),e.stopPropagation()}),"up"==i.unfoldDir?c.prepend(o):c.append(o),c.children("span").html(c.find("ul li.selected").html()),"none"==c.find("ul li.selected").attr("data-id")?c.children("span").addClass("selected-none"):c.children("span").removeClass("selected-none"),i.for?(a.attr("data-for",i.for),a.attr("for",i.for)):(a.attr("data-for",""),a.attr("for","")),u(this).trigger("refreshed"),a.append(c)}else if("string"==typeof e)if(l(e)){if(null==t)return i[e];i[e]=t,a.data("labelSelectOptions",i),a.labelSelect("refresh")}else if("setSelected"==e){if("string"!=typeof t||null==t)throw new TypeError("labelSelect's setSelected method requires a valid non-emtpy string as parameter.");var g=a.find("li[data-id="+t+"]");if(!(null!=g&&0<g.length))throw new TypeError("labelSelect's setSelected method requires an existing option as parameter.");u(g[0]).trigger("click")}else{if("getSelected"==e)return a.data("selected");if("replaceLabel"==e){g=a.data("selected");if("none"==g)return;g=a.find("li[data-id="+g+"]").html();a.css({position:"",height:"",display:""}),a.html(g),a.trigger("replacedLabel")}}return a}}(jQuery);